{"version":3,"sources":["Stopwatch.js","Timer.js","App.js","serviceWorker.js","index.js"],"names":["Stopwatch","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","startTime","running","time","timer","startStopwatch","bind","assertThisInitialized","stopStopwatch","clearStopwatch","keyPress","inherits","createClass","key","value","setState","objectSpread","Date","now","_this2","setTimeout","totalSeconds","hours","Math","floor","minutes","seconds","toString","padStart","clearTimeout","countUp","e","keyCode","document","addEventListener","removeEventListener","react_default","a","createElement","className","id","aria-live","aria-atomic","createDisplayTime","onClick","aria-controls","React","Component","Timer","countingDown","alarmPlaying","alarm","Audio","src","loop","autoplay","preload","handleChange","startTimer","clearInput","pauseTimer","countDown","decrementTime","stopAlarm","spacePress","target","preventDefault","newHours","newMinutes","newSeconds","parseInt","slice","pause","play","onSubmit","react_input_mask_default","formatChars","9","5","mask","maskChar","onChange","alwaysShowMask","disabled","classNames","alarm-playing","hide","aria-hidden","type","App","selected","Container","fluid","Row","Col","xs","md","active","Timer_Timer","Stopwatch_Stopwatch","href","title","rel","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.891d1417.chunk.js","sourcesContent":["import React from \"react\";\n\nexport class Stopwatch extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      startTime: null,\n      running: false,\n      time: 0\n    };\n\n    this.timer = null;\n\n    this.startStopwatch = this.startStopwatch.bind(this);\n    this.stopStopwatch = this.stopStopwatch.bind(this);\n    this.clearStopwatch = this.clearStopwatch.bind(this);\n    this.keyPress = this.keyPress.bind(this);\n  }\n\n  startStopwatch() {\n    this.setState({\n      ...this.state,\n      startTime: this.state.startTime\n        ? new Date(Date.now() - this.state.time)\n        : Date.now(),\n      running: true\n    });\n  }\n\n  countUp() {\n    this.timer = setTimeout(() => {\n      this.setState({\n        ...this.state,\n        time: Date.now() - this.state.startTime\n      });\n    }, 10);\n  }\n\n  createDisplayTime() {\n    const totalSeconds = this.state.time / 1000;\n\n    const hours = Math.floor(totalSeconds / 60 / 60);\n    const minutes = Math.floor((totalSeconds - hours * 60 * 60) / 60);\n    const seconds = Math.floor(totalSeconds - hours * 60 * 60 - minutes * 60);\n\n    const displayTime =\n      hours.toString().padStart(2, \"0\") +\n      \":\" +\n      minutes.toString().padStart(2, \"0\") +\n      \":\" +\n      seconds.toString().padStart(2, \"0\");\n\n    return displayTime;\n  }\n\n  stopStopwatch() {\n    this.setState({\n      ...this.state,\n      running: false\n    });\n    clearTimeout(this.timer);\n  }\n\n  clearStopwatch() {\n    this.setState({\n      ...this.state,\n      startTime: null,\n      time: 0\n    });\n  }\n\n  componentDidUpdate() {\n    if (this.state.running) {\n      this.countUp();\n    }\n  }\n\n  keyPress(e) {\n    if (e.keyCode !== 32) {\n      return;\n    }\n\n    if (this.state.running) {\n      this.stopStopwatch();\n      return;\n    }\n\n    this.startStopwatch();\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.keyPress, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.keyPress, false);\n  }\n\n  render() {\n    return (\n      <div className=\"stopwatch\">\n        <div className=\"time-labels\">hours : minutes : seconds</div>\n        <div\n          id=\"stopwatch-time\"\n          aria-live={this.state.running ? \"polite\" : \"off\"}\n          aria-atomic=\"true\"\n        >\n          {this.createDisplayTime()}\n        </div>\n        <div className=\"controls\">\n          {!this.state.running && (\n            <button\n              className=\"control-button start-button\"\n              onClick={this.startStopwatch}\n              aria-controls=\"stopwatch-time\"\n            >\n              start\n            </button>\n          )}\n          {!this.state.running && (\n            <button\n              className=\"control-button clear-button\"\n              onClick={this.clearStopwatch}\n              aria-controls=\"stopwatch-time\"\n            >\n              clear\n            </button>\n          )}\n          {this.state.running && (\n            <button\n              className=\"control-button pause-button\"\n              onClick={this.stopStopwatch}\n              aria-controls=\"stopwatch-time\"\n            >\n              pause\n            </button>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport InputMask from \"react-input-mask\";\nimport classNames from \"classnames\";\n\nexport class Timer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      time: \"00:00:00\",\n      countingDown: false,\n      alarmPlaying: false\n    };\n\n    this.timer = null;\n\n    this.alarm = new Audio();\n    this.alarm.src = \"alarm.mp3\";\n    this.alarm.loop = true;\n    this.alarm.autoplay = false;\n    this.alarm.preload = \"auto\";\n\n    this.handleChange = this.handleChange.bind(this);\n    this.startTimer = this.startTimer.bind(this);\n    this.clearInput = this.clearInput.bind(this);\n    this.pauseTimer = this.pauseTimer.bind(this);\n    this.countDown = this.countDown.bind(this);\n    this.decrementTime = this.decrementTime.bind(this);\n    this.stopAlarm = this.stopAlarm.bind(this);\n    this.spacePress = this.spacePress.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({\n      ...this.state,\n      time: e.target.value\n    });\n  }\n\n  startTimer(e) {\n    e && e.preventDefault();\n\n    this.setState({\n      ...this.state,\n      countingDown: true\n    });\n  }\n\n  clearInput() {\n    this.setState({\n      ...this.state,\n      time: \"00:00:00\"\n    });\n  }\n\n  pauseTimer() {\n    this.setState({\n      ...this.state,\n      countingDown: false\n    });\n\n    clearTimeout(this.timer);\n  }\n\n  countDown() {\n    this.timer = setTimeout(() => {\n      this.setState({\n        ...this.state,\n        time: this.decrementTime()\n      });\n    }, 1000);\n  }\n\n  decrementTime() {\n    let newHours = 0;\n    let newMinutes = 0;\n    let newSeconds = 0;\n\n    const hours = parseInt(this.state.time.slice(0, 2));\n    const minutes = parseInt(this.state.time.slice(3, 5));\n    const seconds = parseInt(this.state.time.slice(6, 8));\n\n    newSeconds = seconds - 1;\n    if (newSeconds < 0) {\n      newSeconds = 59;\n      newMinutes = minutes - 1;\n\n      if (newMinutes < 0) {\n        newMinutes = 59;\n        newHours = hours - 1;\n      } else {\n        newHours = hours;\n      }\n    } else {\n      newMinutes = minutes;\n      newHours = hours;\n    }\n\n    const newTime =\n      newHours.toString().padStart(2, \"0\") +\n      \":\" +\n      newMinutes.toString().padStart(2, \"0\") +\n      \":\" +\n      newSeconds.toString().padStart(2, \"0\");\n\n    return newTime;\n  }\n\n  stopAlarm() {\n    this.setState({\n      ...this.state,\n      alarmPlaying: false,\n      countingDown: false\n    });\n\n    this.alarm.pause();\n  }\n\n  componentDidUpdate() {\n    if (this.state.countingDown && this.state.time !== \"00:00:00\") {\n      this.countDown();\n    }\n\n    if (\n      this.state.countingDown &&\n      this.state.time === \"00:00:00\" &&\n      !this.state.alarmPlaying\n    ) {\n      this.alarm.play();\n      this.setState({\n        ...this.state,\n        alarmPlaying: true,\n        countingDown: false\n      });\n      clearTimeout(this.timer);\n    }\n  }\n\n  spacePress(e) {\n    if (e.keyCode !== 32) {\n      return;\n    }\n\n    if (this.state.countingDown) {\n      this.pauseTimer();\n      return;\n    }\n\n    if (this.state.alarmPlaying) {\n      this.stopAlarm();\n      return;\n    }\n\n    this.startTimer();\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.spacePress, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.spacePress, false);\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.startTimer} className=\"timer-form\">\n        <div className=\"time-labels\">hours : minutes : seconds</div>\n        <InputMask\n          formatChars={{\n            \"9\": \"[0-9]\",\n            \"5\": \"[0-5]\"\n          }}\n          mask=\"99:59:59\"\n          maskChar=\"0\"\n          value={this.state.time}\n          onChange={this.handleChange}\n          alwaysShowMask={true}\n          disabled={this.state.countingDown || this.state.alarmPlaying}\n          className={classNames({ \"alarm-playing\": this.state.alarmPlaying })}\n          aria-live={this.state.countingDown ? \"polite\" : \"off\"}\n          aria-atomic=\"true\"\n          id=\"timer-time\"\n        />\n        <div\n          className={classNames(\"timer-instructions\", {\n            hide: this.state.countingDown || this.state.alarmPlaying\n          })}\n          aria-hidden={this.state.countingDown || this.state.alarmPlaying}\n        >\n          type in a time, then press start\n        </div>\n        <div className=\"controls\">\n          {!this.state.countingDown && !this.state.alarmPlaying && (\n            <span>\n              <button\n                type=\"submit\"\n                className=\"control-button start-button\"\n                aria-controls=\"timer-time\"\n              >\n                Start\n              </button>\n              <button\n                type=\"button\"\n                onClick={this.clearInput}\n                className=\"control-button clear-button\"\n                aria-controls=\"timer-time\"\n              >\n                Clear\n              </button>\n            </span>\n          )}\n          {this.state.countingDown && !this.state.alarmPlaying && (\n            <button\n              onClick={this.pauseTimer}\n              className=\"control-button pause-button\"\n              aria-controls=\"timer-time\"\n            >\n              Pause\n            </button>\n          )}\n          {this.state.alarmPlaying && (\n            <button\n              onClick={this.stopAlarm}\n              className=\"control-button stop-button\"\n              aria-controls=\"timer-time\"\n            >\n              Stop\n            </button>\n          )}\n        </div>\n      </form>\n    );\n  }\n}\n","import React from \"react\";\nimport { Stopwatch } from \"./Stopwatch\";\nimport { Timer } from \"./Timer\";\nimport \"./App.css\";\nimport classNames from \"classnames\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selected: \"timer\"\n    };\n  }\n\n  render() {\n    const selected = this.state.selected;\n\n    return (\n      <Container className=\"App\" fluid>\n        <Row className=\"pt-5\">\n          <Col xs={10} md={5} className=\"tabs p-3 m-auto\">\n            <Row className=\"switcher justify-content-center\">\n              <button\n                className={classNames(\"selector timer-selector\", {\n                  active: selected === \"timer\"\n                })}\n                onClick={() => this.setState({ selected: \"timer\" })}\n                disabled={selected === \"timer\"}\n              >\n                Timer\n              </button>\n              <button\n                className={classNames(\"selector stopwatch-selector\", {\n                  active: selected === \"stopwatch\"\n                })}\n                onClick={() => this.setState({ selected: \"stopwatch\" })}\n                disabled={selected === \"stopwatch\"}\n              >\n                Stopwatch\n              </button>\n            </Row>\n            <Row className=\"clocks justify-content-center\">\n              {selected === \"timer\" && <Timer />}\n              {selected === \"stopwatch\" && <Stopwatch />}\n            </Row>\n          </Col>\n        </Row>\n        <footer>\n          <div className=\"tip\">you can also press space to start/stop</div>\n          <div className=\"links-and-credits\">\n            <a\n              href=\"https://github.com/christinesn/timer-and-stopwatch\"\n              title=\"View source on github\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              github\n            </a>\n            &nbsp;&nbsp;✨ alarm mp3 from\n            <a\n              href=\"http://www.orangefreesounds.com/wecker-sound/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              orange free sounds\n            </a>\n          </div>\n        </footer>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}